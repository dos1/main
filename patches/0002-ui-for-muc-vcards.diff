diff --git a/src/groupchatdlg.cpp b/src/groupchatdlg.cpp
index 53ff31c..fcffd20 100644
--- a/src/groupchatdlg.cpp
+++ b/src/groupchatdlg.cpp
@@ -657,7 +657,7 @@ GCMainDlg::GCMainDlg(PsiAccount *pa, const Jid &j, TabManager *tabManager)
 	d->self = d->prev_self = j.resource();
 	account()->dialogRegister(this, jid());
 	connect(account(), SIGNAL(updatedActivity()), SLOT(pa_updatedActivity()));
-	d->mucManager = new MUCManager(account()->client(), jid());
+	d->mucManager = new MUCManager(account(), jid());
 
 	d->pending = 0;
 	d->hPending = 0;
diff --git a/src/infodlg.cpp b/src/infodlg.cpp
index 0ea9390..e7a62e8 100644
--- a/src/infodlg.cpp
+++ b/src/infodlg.cpp
@@ -178,7 +178,7 @@ InfoDlg::InfoDlg(int type, const Jid &j, const VCard &vcard, PsiAccount *pa, QWi
 	connect(ui_.pb_disco, SIGNAL(clicked()), this, SLOT(doDisco()));
 	//connect(editnames, SIGNAL(triggered()), d->namesDlg, SLOT(show()));
 
-	if(d->type == Self) {
+	if(d->type == Self || d->type == MucAdm) {
 		d->bdayPopup = new QFrame(this);
 		d->bdayPopup->setFrameShape(QFrame::StyledPanel);
 		QVBoxLayout* vbox = new QVBoxLayout(d->bdayPopup);
@@ -273,8 +273,11 @@ void InfoDlg::closeEvent ( QCloseEvent * e ) {
 		return;
 	}
 
-	if(d->type == Self && edited()) {
-		int n = QMessageBox::information(this, tr("Warning"), tr("You have not published your account information changes.\nAre you sure you want to discard them?"), tr("Close and discard"), tr("Don't close"));
+	if((d->type == Self || d->type == MucAdm) && edited()) {
+		int n = QMessageBox::information(this, tr("Warning"),
+		                                 d->type == MucAdm ? tr("You have not published conference information changes.\nAre you sure you want to discard them?") :
+		                                                     tr("You have not published your account information changes.\nAre you sure you want to discard them?"),
+		                                 tr("Close and discard"), tr("Don't close"));
 		if(n != 0) {
 			e->ignore();
 			return;
@@ -327,6 +330,8 @@ void InfoDlg::jt_finished()
 		if(d->actionType == 0) {
 			if(d->type == Self)
 				QMessageBox::critical(this, tr("Error"), tr("Unable to retrieve your account information.  Perhaps you haven't entered any yet."));
+			else if (d->type == MucAdm)
+				QMessageBox::critical(this, tr("Error"), tr("Unable to retrieve information about this conference.\nReason: %1").arg(jtVCard->statusString()));
 			else
 				QMessageBox::critical(this, tr("Error"), tr("Unable to retrieve information about this contact.\nReason: %1").arg(jtVCard->statusString()));
 		}
@@ -350,7 +355,7 @@ void InfoDlg::setData(const VCard &i)
 		ui_.le_bday->setText( i.bdayStr() );
 	}
 	const QString fullName = i.fullName();
-	if (d->type != Self && fullName.isEmpty()) {
+	if (d->type != Self && d->type != MucAdm && fullName.isEmpty()) {
 		ui_.le_fullname->setText( QString("%1 %2 %3")
 			.arg(i.givenName())
 			.arg(i.middleName())
@@ -584,7 +589,11 @@ void InfoDlg::doSubmit()
 	d->actionType = 1;
 	d->busy->start();
 
-	VCardFactory::instance()->setVCard(d->pa, submit_vcard, this, SLOT(jt_finished()));
+	if (d->type == MucAdm) {
+		VCardFactory::instance()->setMucVCard(d->pa, submit_vcard, d->jid, this, SLOT(jt_finished()));
+	} else {
+		VCardFactory::instance()->setVCard(d->pa, submit_vcard, this, SLOT(jt_finished()));
+	}
 }
 
 void InfoDlg::doShowCal()
diff --git a/src/infodlg.h b/src/infodlg.h
index 04ce315..43e3a7a 100644
--- a/src/infodlg.h
+++ b/src/infodlg.h
@@ -38,7 +38,7 @@ class InfoDlg : public QDialog
 {
 	Q_OBJECT
 public:
-	enum { Self, Contact };
+	enum { Self, Contact, MucAdm };
 	InfoDlg(int type, const XMPP::Jid &, const XMPP::VCard &, PsiAccount *, QWidget *parent=0, bool cacheVCard = true);
 	~InfoDlg();
 
diff --git a/src/mucconfig.ui b/src/mucconfig.ui
index a30b955..1ad00c7 100644
--- a/src/mucconfig.ui
+++ b/src/mucconfig.ui
@@ -1,10 +1,8 @@
-<ui version="4.0" >
- <author></author>
- <comment></comment>
- <exportmacro></exportmacro>
+<?xml version="1.0" encoding="UTF-8"?>
+<ui version="4.0">
  <class>MUCConfig</class>
- <widget class="QDialog" name="MUCConfig" >
-  <property name="geometry" >
+ <widget class="QDialog" name="MUCConfig">
+  <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
@@ -12,38 +10,56 @@
     <height>375</height>
    </rect>
   </property>
-  <property name="windowTitle" >
+  <property name="windowTitle">
    <string>Room Configuration</string>
   </property>
-  <layout class="QVBoxLayout" >
-   <property name="margin" >
+  <layout class="QVBoxLayout">
+   <property name="spacing">
+    <number>6</number>
+   </property>
+   <property name="leftMargin">
     <number>9</number>
    </property>
-   <property name="spacing" >
-    <number>6</number>
+   <property name="topMargin">
+    <number>9</number>
+   </property>
+   <property name="rightMargin">
+    <number>9</number>
+   </property>
+   <property name="bottomMargin">
+    <number>9</number>
    </property>
    <item>
-    <widget class="QTabWidget" name="tabs" >
-     <property name="currentIndex" >
+    <widget class="QTabWidget" name="tabs">
+     <property name="currentIndex">
       <number>0</number>
      </property>
-     <widget class="QWidget" name="tab_affiliations" >
-      <attribute name="title" >
+     <widget class="QWidget" name="tab_affiliations">
+      <attribute name="title">
        <string>Affiliations</string>
       </attribute>
-      <layout class="QGridLayout" >
-       <property name="margin" >
+      <layout class="QGridLayout">
+       <property name="leftMargin">
+        <number>9</number>
+       </property>
+       <property name="topMargin">
+        <number>9</number>
+       </property>
+       <property name="rightMargin">
         <number>9</number>
        </property>
-       <property name="spacing" >
+       <property name="bottomMargin">
+        <number>9</number>
+       </property>
+       <property name="spacing">
         <number>6</number>
        </property>
-       <item rowspan="2" row="2" column="3" >
+       <item row="2" column="3" rowspan="2">
         <spacer>
-         <property name="orientation" >
+         <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
-         <property name="sizeHint" >
+         <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>141</height>
@@ -51,31 +67,29 @@
          </property>
         </spacer>
        </item>
-       <item row="3" column="0" >
-        <widget class="QLabel" name="label" >
-         <property name="text" >
+       <item row="3" column="0">
+        <widget class="QLabel" name="label">
+         <property name="text">
           <string>Filter:</string>
          </property>
         </widget>
        </item>
-       <item row="3" column="1" >
-        <widget class="QLineEdit" name="le_filter" >
-         <property name="sizePolicy" >
-          <sizepolicy>
-           <hsizetype>5</hsizetype>
-           <vsizetype>0</vsizetype>
+       <item row="3" column="1">
+        <widget class="QLineEdit" name="le_filter">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
         </widget>
        </item>
-       <item row="3" column="2" >
+       <item row="3" column="2">
         <spacer>
-         <property name="orientation" >
+         <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
-         <property name="sizeHint" >
+         <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
@@ -83,64 +97,80 @@
          </property>
         </spacer>
        </item>
-       <item rowspan="3" row="0" column="0" colspan="3" >
-        <widget class="MUCAffiliationsView" native="1" name="tv_affiliations" >
-         <property name="sizePolicy" >
-          <sizepolicy>
-           <hsizetype>7</hsizetype>
-           <vsizetype>13</vsizetype>
+       <item row="0" column="0" rowspan="3" colspan="3">
+        <widget class="MUCAffiliationsView" name="tv_affiliations" native="true">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Expanding" vsizetype="Ignored">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
         </widget>
        </item>
-       <item row="0" column="3" >
-        <widget class="QPushButton" name="pb_add" >
-         <property name="text" >
+       <item row="0" column="3">
+        <widget class="QPushButton" name="pb_add">
+         <property name="text">
           <string>Add</string>
          </property>
         </widget>
        </item>
-       <item row="1" column="3" >
-        <widget class="QPushButton" name="pb_remove" >
-         <property name="text" >
+       <item row="1" column="3">
+        <widget class="QPushButton" name="pb_remove">
+         <property name="text">
           <string>Remove</string>
          </property>
         </widget>
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="tab_general" >
-      <attribute name="title" >
+     <widget class="QWidget" name="tab_general">
+      <attribute name="title">
        <string>General</string>
       </attribute>
-      <layout class="QVBoxLayout" >
-       <property name="margin" >
+      <layout class="QVBoxLayout">
+       <property name="spacing">
+        <number>6</number>
+       </property>
+       <property name="leftMargin">
         <number>9</number>
        </property>
-       <property name="spacing" >
-        <number>6</number>
+       <property name="topMargin">
+        <number>9</number>
+       </property>
+       <property name="rightMargin">
+        <number>9</number>
+       </property>
+       <property name="bottomMargin">
+        <number>9</number>
        </property>
        <item>
-        <widget class="QStackedWidget" name="sw_general" >
-         <property name="currentIndex" >
+        <widget class="QStackedWidget" name="sw_general">
+         <property name="currentIndex">
           <number>0</number>
          </property>
-         <widget class="QWidget" name="pg_general_message" >
-          <layout class="QVBoxLayout" >
-           <property name="margin" >
+         <widget class="QWidget" name="pg_general_message">
+          <layout class="QVBoxLayout">
+           <property name="spacing">
+            <number>6</number>
+           </property>
+           <property name="leftMargin">
             <number>9</number>
            </property>
-           <property name="spacing" >
-            <number>6</number>
+           <property name="topMargin">
+            <number>9</number>
+           </property>
+           <property name="rightMargin">
+            <number>9</number>
+           </property>
+           <property name="bottomMargin">
+            <number>9</number>
            </property>
            <item>
             <spacer>
-             <property name="orientation" >
+             <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
-             <property name="sizeHint" >
+             <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>40</height>
@@ -149,24 +179,24 @@
             </spacer>
            </item>
            <item>
-            <widget class="QLabel" name="lb_general_message" >
-             <property name="text" >
+            <widget class="QLabel" name="lb_general_message">
+             <property name="text">
               <string>message</string>
              </property>
-             <property name="alignment" >
+             <property name="alignment">
               <set>Qt::AlignCenter</set>
              </property>
-             <property name="wordWrap" >
+             <property name="wordWrap">
               <bool>true</bool>
              </property>
             </widget>
            </item>
            <item>
             <spacer>
-             <property name="orientation" >
+             <property name="orientation">
               <enum>Qt::Vertical</enum>
              </property>
-             <property name="sizeHint" >
+             <property name="sizeHint" stdset="0">
               <size>
                <width>20</width>
                <height>40</height>
@@ -176,23 +206,32 @@
            </item>
           </layout>
          </widget>
-         <widget class="QWidget" name="pg_general_data" />
+         <widget class="QWidget" name="pg_general_data"/>
         </widget>
        </item>
        <item>
-        <layout class="QHBoxLayout" >
-         <property name="margin" >
+        <layout class="QHBoxLayout">
+         <property name="spacing">
+          <number>6</number>
+         </property>
+         <property name="leftMargin">
           <number>0</number>
          </property>
-         <property name="spacing" >
-          <number>6</number>
+         <property name="topMargin">
+          <number>0</number>
+         </property>
+         <property name="rightMargin">
+          <number>0</number>
+         </property>
+         <property name="bottomMargin">
+          <number>0</number>
          </property>
          <item>
           <spacer>
-           <property name="orientation" >
+           <property name="orientation">
             <enum>Qt::Horizontal</enum>
            </property>
-           <property name="sizeHint" >
+           <property name="sizeHint" stdset="0">
             <size>
              <width>40</width>
              <height>20</height>
@@ -201,18 +240,18 @@
           </spacer>
          </item>
          <item>
-          <widget class="QPushButton" name="pb_destroy" >
-           <property name="text" >
+          <widget class="QPushButton" name="pb_destroy">
+           <property name="text">
             <string>Destroy Room</string>
            </property>
           </widget>
          </item>
          <item>
           <spacer>
-           <property name="orientation" >
+           <property name="orientation">
             <enum>Qt::Horizontal</enum>
            </property>
-           <property name="sizeHint" >
+           <property name="sizeHint" stdset="0">
             <size>
              <width>40</width>
              <height>20</height>
@@ -224,25 +263,39 @@
        </item>
       </layout>
      </widget>
+     <widget class="QWidget" name="tab_vcard">
+      <attribute name="title">
+       <string>&amp;Vcard</string>
+      </attribute>
+     </widget>
     </widget>
    </item>
    <item>
-    <layout class="QHBoxLayout" >
-     <property name="margin" >
+    <layout class="QHBoxLayout">
+     <property name="spacing">
+      <number>6</number>
+     </property>
+     <property name="leftMargin">
       <number>0</number>
      </property>
-     <property name="spacing" >
-      <number>6</number>
+     <property name="topMargin">
+      <number>0</number>
+     </property>
+     <property name="rightMargin">
+      <number>0</number>
+     </property>
+     <property name="bottomMargin">
+      <number>0</number>
      </property>
      <item>
-      <widget class="BusyWidget" native="1" name="busy" />
+      <widget class="BusyWidget" name="busy" native="true"/>
      </item>
      <item>
       <spacer>
-       <property name="orientation" >
+       <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
-       <property name="sizeHint" >
+       <property name="sizeHint" stdset="0">
         <size>
          <width>131</width>
          <height>31</height>
@@ -251,15 +304,15 @@
       </spacer>
      </item>
      <item>
-      <widget class="QPushButton" name="pb_apply" >
-       <property name="text" >
+      <widget class="QPushButton" name="pb_apply">
+       <property name="text">
         <string>Apply</string>
        </property>
       </widget>
      </item>
      <item>
-      <widget class="QPushButton" name="pb_close" >
-       <property name="text" >
+      <widget class="QPushButton" name="pb_close">
+       <property name="text">
         <string>Close</string>
        </property>
       </widget>
@@ -268,21 +321,18 @@
    </item>
   </layout>
  </widget>
- <pixmapfunction></pixmapfunction>
  <customwidgets>
   <customwidget>
    <class>BusyWidget</class>
    <extends>QWidget</extends>
    <header>busywidget.h</header>
    <container>1</container>
-   <pixmap></pixmap>
   </customwidget>
   <customwidget>
    <class>MUCAffiliationsView</class>
    <extends>QWidget</extends>
    <header>mucaffiliationsview.h</header>
    <container>1</container>
-   <pixmap></pixmap>
   </customwidget>
  </customwidgets>
  <resources/>
@@ -293,11 +343,11 @@
    <receiver>MUCConfig</receiver>
    <slot>reject()</slot>
    <hints>
-    <hint type="sourcelabel" >
+    <hint type="sourcelabel">
      <x>369</x>
      <y>253</y>
     </hint>
-    <hint type="destinationlabel" >
+    <hint type="destinationlabel">
      <x>179</x>
      <y>282</y>
     </hint>
diff --git a/src/mucconfigdlg.cpp b/src/mucconfigdlg.cpp
index a740f70..6ff932b 100644
--- a/src/mucconfigdlg.cpp
+++ b/src/mucconfigdlg.cpp
@@ -29,6 +29,9 @@
 #include "mucaffiliationsproxymodel.h"
 #include "mucconfigdlg.h"
 #include "xdata_widget.h"
+#include "infodlg.h"
+#include "vcardfactory.h"
+#include "xmpp_vcard.h"
 
 using namespace XMPP;
 
@@ -154,6 +157,24 @@ void MUCConfigDlg::refreshAffiliations()
 	ui_.tv_affiliations->clearSelection();
 }
 
+void MUCConfigDlg::refreshVcard()
+{
+	if (ui_.tab_vcard->layout()) {
+		return;
+	}
+	QVBoxLayout *layout = new QVBoxLayout;
+
+	const VCard *vcard = VCardFactory::instance()->vcard(manager_->room());
+
+	VCard tmp;
+	if ( vcard )
+		tmp = *vcard;
+
+	InfoDlg *dlg = new InfoDlg(InfoDlg::MucAdm, manager_->room(), tmp, manager_->account());
+	layout->addWidget(dlg);
+	ui_.tab_vcard->setLayout(layout);
+}
+
 void MUCConfigDlg::add()
 {
 	bool ok;
@@ -216,10 +237,14 @@ void MUCConfigDlg::destroy()
 void MUCConfigDlg::currentTabChanged(int)
 {
 	ui_.busy->stop();
-	if (ui_.tabs->currentWidget() == ui_.tab_affiliations)
+	if (ui_.tabs->currentWidget() == ui_.tab_affiliations) {
 		refreshAffiliations();
-	else
+	} else if (ui_.tabs->currentWidget() == ui_.tab_general) {
 		refreshGeneral();
+	} else {
+		refreshVcard();
+	}
+
 }
 
 void MUCConfigDlg::applyFilter(const QString& s)
diff --git a/src/mucconfigdlg.h b/src/mucconfigdlg.h
index a8cb852..7eea77a 100644
--- a/src/mucconfigdlg.h
+++ b/src/mucconfigdlg.h
@@ -52,6 +52,7 @@ protected:
 	void setAffiliation(MUCItem::Affiliation);
 	void refreshGeneral();
 	void refreshAffiliations();
+	void refreshVcard();
 	void removePendingRequest(MUCItem::Affiliation);
 
 protected slots:
diff --git a/src/mucmanager.cpp b/src/mucmanager.cpp
index 9ae22d4..bf9d267 100644
--- a/src/mucmanager.cpp
+++ b/src/mucmanager.cpp
@@ -34,6 +34,7 @@
 #include "xmpp_xmlcommon.h"
 #include "xmpp_task.h"
 #include "xmpp_client.h"
+#include "psiaccount.h"
 
 using namespace XMPP;
 
@@ -218,7 +219,7 @@ private:
 
 // -----------------------------------------------------------------------------
 
-MUCManager::MUCManager(Client* client, const Jid& room) : client_(client), room_(room)
+MUCManager::MUCManager(PsiAccount *account, const Jid& room) : account_(account), room_(room)
 {
 }
 
@@ -229,7 +230,7 @@ const Jid& MUCManager::room() const
 
 void MUCManager::getConfiguration()
 {
-	MUCConfigurationTask* t = new MUCConfigurationTask(room_, client_->rootTask());
+	MUCConfigurationTask* t = new MUCConfigurationTask(room_, client()->rootTask());
 	connect(t,SIGNAL(finished()),SLOT(getConfiguration_finished()));
 	t->get();
 	t->go(true);
@@ -237,7 +238,7 @@ void MUCManager::getConfiguration()
 
 void MUCManager::setConfiguration(const XMPP::XData& c)
 {
-	MUCConfigurationTask* t = new MUCConfigurationTask(room_, client_->rootTask());
+	MUCConfigurationTask* t = new MUCConfigurationTask(room_, client()->rootTask());
 	XData config = c;
 	config.setType(XData::Data_Submit);
 	connect(t,SIGNAL(finished()),SLOT(setConfiguration_finished()));
@@ -252,19 +253,24 @@ void MUCManager::setDefaultConfiguration()
 
 void MUCManager::destroy(const QString& reason, const Jid& venue)
 {
-	MUCDestroyTask* t = new MUCDestroyTask(room_, reason, venue, client_->rootTask());
+	MUCDestroyTask* t = new MUCDestroyTask(room_, reason, venue, client()->rootTask());
 	connect(t,SIGNAL(finished()),SLOT(destroy_finished()));
 	t->go(true);
 }
 
 XMPP::Client* MUCManager::client() const
 {
-	return client_;
+	return account_->client();
+}
+
+PsiAccount *MUCManager::account() const
+{
+	return account_;
 }
 
 void MUCManager::setItems(const QList<MUCItem>& items)
 {
-	MUCItemsTask* t = new MUCItemsTask(room_, client_->rootTask());
+	MUCItemsTask* t = new MUCItemsTask(room_, client()->rootTask());
 	connect(t,SIGNAL(finished()),SLOT(setItems_finished()));
 	t->set(items);
 	t->go(true);
@@ -272,7 +278,7 @@ void MUCManager::setItems(const QList<MUCItem>& items)
 
 void MUCManager::getItemsByAffiliation(MUCItem::Affiliation affiliation)
 {
-	MUCItemsTask* t = new MUCItemsTask(room_, client_->rootTask());
+	MUCItemsTask* t = new MUCItemsTask(room_, client()->rootTask());
 	connect(t,SIGNAL(finished()),SLOT(getItemsByAffiliation_finished()));
 	t->getByAffiliation(affiliation);
 	t->go(true);
@@ -347,7 +353,7 @@ void MUCManager::setRole(const QString& nick, MUCItem::Role role, const QString&
 		item.setReason(reason);
 	items.push_back(item);
 
-	MUCItemsTask* t = new MUCItemsTask(room_, client_->rootTask());
+	MUCItemsTask* t = new MUCItemsTask(room_, client()->rootTask());
 	connect(t,SIGNAL(finished()),SLOT(action_finished()));
 	t->set(items,action);
 	t->go(true);
@@ -362,7 +368,7 @@ void MUCManager::setAffiliation(const Jid& user, MUCItem::Affiliation affiliatio
 		item.setReason(reason);
 	items.push_back(item);
 
-	MUCItemsTask* t = new MUCItemsTask(room_, client_->rootTask());
+	MUCItemsTask* t = new MUCItemsTask(room_, client()->rootTask());
 	connect(t,SIGNAL(finished()),SLOT(action_finished()));
 	t->set(items,action);
 	t->go(true);
diff --git a/src/mucmanager.h b/src/mucmanager.h
index 18fc70e..abb2269 100644
--- a/src/mucmanager.h
+++ b/src/mucmanager.h
@@ -32,6 +32,8 @@ namespace XMPP {
 	class Client;
 }
 
+class PsiAccount;
+
 using namespace XMPP;
 
 class MUCManager : public QObject
@@ -49,7 +51,7 @@ public:
 		SetRole, SetAffiliation
 	};
 
-	MUCManager(XMPP::Client* client, const Jid&);
+	MUCManager(PsiAccount* account, const Jid&);
 
 	const Jid& room() const;
 
@@ -60,6 +62,7 @@ public:
 	void getItemsByAffiliation(MUCItem::Affiliation);
 	void destroy(const QString& reason = QString(), const Jid& venue = Jid());
 	XMPP::Client* client() const;
+	PsiAccount* account() const;
 
 	// Basic operations
 	void kick(const QString&, const QString& = QString());
@@ -120,7 +123,7 @@ protected slots:
 	void setItems_finished();
 
 private:
-	XMPP::Client* client_;
+	PsiAccount* account_;
 	Jid room_;
 };
 
diff --git a/src/vcardfactory.cpp b/src/vcardfactory.cpp
index 92d1563..253460a 100644
--- a/src/vcardfactory.cpp
+++ b/src/vcardfactory.cpp
@@ -165,6 +165,19 @@ void VCardFactory::setVCard(const PsiAccount* account, const VCard &v, QObject*
 	jtVCard_->go(true);
 }
 
+/**
+ * \brief Updates vCard on specified \a account.
+ */
+void VCardFactory::setMucVCard(const PsiAccount* account, const VCard &v, const Jid &mucJid, QObject* obj, const char* slot)
+{
+	JT_VCard* jtVCard_ = new JT_VCard(account->client()->rootTask());
+	if (obj)
+		connect(jtVCard_, SIGNAL(finished()), obj, slot);
+	connect(jtVCard_, SIGNAL(finished()), SLOT(updateVCardFinished()));
+	jtVCard_->set(mucJid, v, true);
+	jtVCard_->go(true);
+}
+
 void VCardFactory::updateVCardFinished()
 {
 	JT_VCard* jtVCard = static_cast<JT_VCard*> (sender());
diff --git a/src/vcardfactory.h b/src/vcardfactory.h
index ba5345c..cc639e1 100644
--- a/src/vcardfactory.h
+++ b/src/vcardfactory.h
@@ -44,6 +44,7 @@ public:
 	const VCard *vcard(const Jid &);
 	void setVCard(const Jid &, const VCard &);
 	void setVCard(const PsiAccount* account, const VCard &v, QObject* obj = 0, const char* slot = 0);
+	void setMucVCard(const PsiAccount* account, const VCard &v, const Jid &mucJid, QObject* obj, const char* slot);
 	JT_VCard *getVCard(const Jid &, Task *rootTask, const QObject *, const char *slot, bool cacheVCard = true);
 
 signals:
